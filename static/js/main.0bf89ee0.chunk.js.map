{"version":3,"sources":["stock.js","App.js","reportWebVitals.js","index.js"],"names":["Stock","props","state","symbol","value","afficher","affichage","bind","this","timerID","setInterval","fetch","method","then","response","json","setState","Component","App","className","class","id","href","data-toggle","data-target","aria-expanded","aria-controls","aria-labelledby","data-parent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAuCeA,E,kDApCd,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACEC,MAAQ,CACTC,OAAQ,KACRC,MAAO,IAEX,EAAKC,SAAW,EAAKC,UAAUC,KAAf,gBANJ,E,0CASlB,WACG,OACG,8BACC,uCAAUC,KAAKN,MAAMC,c,+BAK3B,WAAoB,IAAD,OAClBK,KAAKC,QAAUC,aAAY,WAC1BC,MAAM,uGAAwG,CAAEC,OAAQ,QACxHC,MAAK,SAACC,GACN,OAAOA,EAASC,UAEhBF,MAAK,SAACE,GACS,EAAKC,SAAS,CAACb,OAAQY,EAAK,aAAc,eAC1C,EAAKC,SAAS,CAACZ,MAAOW,EAAK,6BAE1C,O,uBAGD,gB,GA/BgBE,aCkELC,E,kDA9Db,WAAYjB,GAAO,uCACTA,G,0CAGR,WACC,OACE,qBAAKkB,UAAU,MAAf,SACC,iCAEA,qBAAIC,MAAM,gEAAgEC,GAAG,mBAA7E,UACI,oBAAGD,MAAM,iEAAiEE,KAAK,aAA/E,UAEA,qBAAKF,MAAM,iCAAX,SACQ,mBAAGA,MAAM,wBAEb,qBAAKA,MAAM,0BAAX,gCAGJ,oBAAIA,MAAM,yBAEV,oBAAIA,MAAM,kBAAV,SACI,oBAAGA,MAAM,WAAWE,KAAK,aAAzB,UACI,mBAAGF,MAAM,gCACT,kDAGR,oBAAIA,MAAM,yBAEV,uBACJ,sBAAKC,GAAG,kBAAkBD,MAAM,qBAAhC,UAEI,qBAAKA,MAAM,kBAAX,uBAIA,qBAAIA,MAAM,WAAV,UACI,oBAAGA,MAAM,qBAAqBE,KAAK,IAAIC,cAAY,WAAWC,cAAY,eACtEC,gBAAc,OAAOC,gBAAc,cADvC,UAEI,mBAAGN,MAAM,qBACT,iDAEJ,qBAAKC,GAAG,cAAcD,MAAM,WAAWO,kBAAgB,aAAaC,cAAY,oBAAhF,SACI,sBAAKR,MAAM,uCAAX,UACI,oBAAIA,MAAM,kBAAV,gCACA,mBAAGA,MAAM,gBAAgBE,KAAK,eAA9B,qBACA,mBAAGF,MAAM,gBAAgBE,KAAK,aAA9B,iCAQZ,cAAC,EAAD,a,GAtDML,aCOHY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0bf89ee0.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Stock extends Component {\n\tconstructor(props) {\n   \t\tsuper(props);\n   \t    this.state = {\n            symbol: null,\n            value: [],\n        };\n        this.afficher = this.affichage.bind(this);\n\t}\n \t\n \trender() {\n   \t\treturn(\n      \t\t<div>\n      \t\t\t<p>Cours {this.state.symbol}</p>\n      \t\t</div>\n    \t);\n  \t}\n\n  \tcomponentDidMount(){\n  \t\tthis.timerID = setInterval(() => {\n  \t\t\tfetch(\"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=IBM&interval=5min&apikey=demo\", { method: \"GET\" })\n\t\t\t\t.then((response) => {\n\t\t\t\t\treturn response.json();\n\t\t\t\t})\n\t\t\t\t.then((json) => {\n                    this.setState({symbol: json['Meta Data'].['2. Symbol']});\n                    this.setState({value: json['Time Series (5min)']});\n\t\t\t});\n\t\t}, 1000);\n\t}\n    \n    affichage() {\n\n    }\n        \n}\n\nexport default Stock;","\nimport React, { Component } from 'react';\nimport './App.css';\nimport Stock from './stock.js';\n\nclass App extends Component{\n  constructor(props){\n      super(props);\n    }\n    \n    render() {\n    \treturn (\n      \t<div className=\"App\">\n        <body>\n        \n        <ul class=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\n            <a class=\"sidebar-brand d-flex align-items-center justify-content-center\" href=\"index.html\">\n         \n            <div class=\"sidebar-brand-icon rotate-n-15\">\n                    <i class=\"fas fa-laugh-wink\"></i>\n            </div>\n                <div class=\"sidebar-brand-text mx-3\">Stock Dash v1.0</div>\n            </a>\n\n            <hr class=\"sidebar-divider my-0\"></hr>\n\n            <li class=\"nav-item active\">\n                <a class=\"nav-link\" href=\"index.html\">\n                    <i class=\"fas fa-fw fa-tachometer-alt\"></i>\n                    <span>Dashboard</span></a>\n            </li>\n\n            <hr class=\"sidebar-divider my-0\"></hr>\n            \n            <br />\n        <div id=\"content-wrapper\" class=\"d-flex flex-column\">\n            \n            <div class=\"sidebar-heading\">\n                Interface\n            </div>\n\n            <li class=\"nav-item\">\n                <a class=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseTwo\"\n                    aria-expanded=\"true\" aria-controls=\"collapseTwo\">\n                    <i class=\"fas fa-fw fa-cog\"></i>\n                    <span>Components</span>\n                </a>\n                <div id=\"collapseTwo\" class=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionSidebar\">\n                    <div class=\"bg-white py-2 collapse-inner rounded\">\n                        <h6 class=\"collapse-header\">Custom Components:</h6>\n                        <a class=\"collapse-item\" href=\"buttons.html\">Buttons</a>\n                        <a class=\"collapse-item\" href=\"cards.html\">Cards</a>\n                    </div>\n                </div>\n            </li>\n\n        </div>\n        </ul>\n            \n            <Stock />\n            \n        </body>\n      \t</div>\n    \t);\n  \t}\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}